generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String @default("user name")
  password String
  forms    Form[]
}

model Form {
  id          String     @id @default(uuid())
  userID      Int
  title       String
  description String?
  color       Json
  archive     Boolean?   @default(true)
  theme       String
  limitForm   Int?
  user        User       @relation(fields: [userID], references: [id], onDelete: Cascade)
  questions   Question[]
  responses   Response[]

  @@index([userID], map: "Form_userID_fkey")
}

model Question {
  id         Int      @id @default(autoincrement())
  formID     String
  questionID Int
  title      String
  type       String
  required   Boolean  @default(false)
  limit      Int?
  options    Option[]
  form       Form     @relation(fields: [formID], references: [id], onDelete: Cascade)

  @@index([formID], map: "Question_formID_fkey")
}

model Option {
  id         Int      @id @default(autoincrement())
  text       String   @default("")
  limitAns   Int?
  questionID Int
  question   Question @relation(fields: [questionID], references: [id], onDelete: Cascade)

  @@index([questionID], map: "Option_questionID_fkey")
}

model Response {
  id        Int      @id @default(autoincrement())
  formID    String
  email     String?
  answer    Json
  createdAt DateTime @default(now())
  form      Form     @relation(fields: [formID], references: [id], onDelete: Cascade)

  @@index([formID], map: "Response_formID_fkey")
}
